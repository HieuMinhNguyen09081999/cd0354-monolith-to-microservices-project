apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-user-deployment
  labels:
    app: backend-user
spec:
  replicas: 2  # Adjust as needed for scaling
  selector:
    matchLabels:
      app: backend-user
  template: 
    metadata:
      labels:
        app: backend-user
    spec:
      containers:
      - name: backend-user
        image: nmhieu981999/udagram-api-user:v1
        ports:
        - containerPort: 8080  # Assuming the backend API is listening on port 8080
        resources:
          requests:
            memory: "2Gi"
            cpu: "0.5"
          limits:
            memory: "4Gi"
            cpu: "1"
        env:
        # Environment variables from ConfigMap
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: POSTGRES_DB
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: POSTGRES_HOST
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: AWS_REGION
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: AWS_PROFILE
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: AWS_BUCKET
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: JWT_SECRET
        - name: URL
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: URL
        # Environment variables from Secret
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
          readOnly: true
        - name: secret-volume
          mountPath: /etc/secrets
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: env-configmap
      - name: secret-volume
        secret:
          secretName: env-secret